[{"D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\index.js":"1","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\App.js":"2","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\reportWebVitals.js":"3","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\register.js":"4","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\login.js":"5","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\home.js":"6","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\axios.js":"7","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\userhome.js":"8","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\todolist.js":"9","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\flowchart.js":"10","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\calander.js":"11","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\member_home.js":"12","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\sheet.js":"13","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\todo_components\\subtodolist.js":"14","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\countdown.js":"15","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\todo_components\\Section.js":"16","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\todo_components\\Header.js":"17","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\todo_components\\Input.js":"18","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\todo_components\\List.js":"19","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\general_director_home.js":"20","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\manager_home.js":"21","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\graphql\\mutations.js":"22","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\graphql\\queries.js":"23","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\createselect.js":"24"},{"size":1735,"mtime":1611205489450,"results":"25","hashOfConfig":"26"},{"size":907,"mtime":1611204604310,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1611204581800,"results":"28","hashOfConfig":"26"},{"size":2050,"mtime":1611204604318,"results":"29","hashOfConfig":"26"},{"size":3361,"mtime":1611204604317,"results":"30","hashOfConfig":"26"},{"size":441,"mtime":1611204604317,"results":"31","hashOfConfig":"26"},{"size":9022,"mtime":1611205552479,"results":"32","hashOfConfig":"26"},{"size":1167,"mtime":1611204604322,"results":"33","hashOfConfig":"26"},{"size":3140,"mtime":1611205812176,"results":"34","hashOfConfig":"26"},{"size":3615,"mtime":1611204604315,"results":"35","hashOfConfig":"26"},{"size":8280,"mtime":1611204604314,"results":"36","hashOfConfig":"26"},{"size":1861,"mtime":1611204581793,"results":"37","hashOfConfig":"26"},{"size":3930,"mtime":1611204604318,"results":"38","hashOfConfig":"26"},{"size":769,"mtime":1611204604321,"results":"39","hashOfConfig":"26"},{"size":2974,"mtime":1611204581788,"results":"40","hashOfConfig":"26"},{"size":3410,"mtime":1611206549878,"results":"41","hashOfConfig":"26"},{"size":281,"mtime":1611204581795,"results":"42","hashOfConfig":"26"},{"size":1521,"mtime":1611204604319,"results":"43","hashOfConfig":"26"},{"size":2072,"mtime":1611204604319,"results":"44","hashOfConfig":"26"},{"size":3291,"mtime":1611204604316,"results":"45","hashOfConfig":"26"},{"size":1853,"mtime":1611204581793,"results":"46","hashOfConfig":"26"},{"size":1981,"mtime":1611204604311,"results":"47","hashOfConfig":"26"},{"size":1549,"mtime":1611204604311,"results":"48","hashOfConfig":"26"},{"size":1677,"mtime":1611204604315,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1wb17cc",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"52"},"D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\index.js",[],["117","118"],"D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\App.js",[],"D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\reportWebVitals.js",[],"D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\register.js",["119"],"import '../App.css';\r\nimport { NewUser } from '../axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport Select from \"react-select\"\r\nimport { Button} from '@material-ui/core';\r\nimport { GetClasses } from '../axios'\r\n\r\nfunction Register(){\r\n    const [clicked, setClick] = useState(false)\r\n    const [username, setName] = useState(\"\")\r\n    const [password, setpwd] = useState(\"\")  \r\n    const [userclass, setClass] = useState(\"\")\r\n    const [groupOptions,setoptions] = useState([])  \r\n    const {createUser, isSuccess} = NewUser()\r\n    const {data} = GetClasses()\r\n    useEffect(()=>{\r\n      if(data){\r\n        if(data.getClasses){\r\n          const classoption = data.getClasses.classlist\r\n          if(classoption){setoptions(classoption)}\r\n        }\r\n      }\r\n    },[data])\r\n    return (\r\n      <div className=\"Register_page\">\r\n        <h2>Register</h2>\r\n        <p>Username: </p>\r\n        <input class=\"select\"\r\n              value={username}\r\n              onChange={(e) => {setName(e.target.value)\r\n                                setClick(false)}}></input>\r\n        <p>Password: </p>\r\n        <input class=\"select\"\r\n              value={password}\r\n              onChange={(e) => setpwd(e.target.value)}></input>\r\n        <p>Class: </p>\r\n        <div class=\"select\"><Select value={userclass}\r\n                onChange={(e) => {\r\n                  setClass(e)\r\n                }}\r\n                options={groupOptions}/></div>\r\n        <div class=\"button\"><button  className=\"newbutton\"\r\n                onClick={() => {\r\n                  setClick(true)\r\n                  const userinfo = { username: username,\r\n                                    password: password,\r\n                                    userclass: userclass.value}\r\n                  createUser(userinfo)\r\n                }}\r\n          style={!userclass?{display:\"none\"}:{}}>Register</button></div>\r\n        {clicked? <div>{isSuccess ? `add new user: ${username}`: `${username} already exist`}</div>:<></>}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Register;","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\login.js",["120","121"],"import '../App.css';\r\nimport { UserLogin,GetSubClass } from '../axios'\r\nimport React, { useState,useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport { Button, List, ListItem } from '@material-ui/core';\r\nimport Calander from \"./calander\"\r\nimport TodoList from \"./todolist\"\r\nimport UserHome from \"./userhome\"\r\nimport FlowChart from \"./flowchart\"\r\n\r\nfunction Userpage({setLogout}){\r\n  const { url } = useRouteMatch()\r\n  const { username } = useParams()\r\n  var data = GetSubClass(username)\r\n  const [subclass,setSubclass] = useState([])\r\n  const [myclass, setmyclass] = useState(\"\")\r\n  useEffect(()=>{\r\n      if(data){\r\n          const users = data.getSubusers\r\n          const subusers = users.filter(user => user.username!==username)\r\n          const me = users.filter(user => user.username===username)\r\n          setSubclass(subusers)\r\n          setmyclass(me[0].userclass)\r\n      }\r\n  },[data])\r\n  return(\r\n    <Router>\r\n      <div class=\"usercaption\">\r\n        <h4>Hello, {username}</h4>\r\n        <Button variant=\"contained\" \r\n            onClick={setLogout}>Logout</Button>\r\n      </div>\r\n      <Redirect exact from=\"/login\" to={\"/\"+username}/>\r\n      <div class=\"nav_bar user\">\r\n      <List component=\"nav\">\r\n        <ListItem><Link to={url}>UserHome</Link></ListItem>\r\n        <ListItem><Link to={url+\"/calander\"}>Calander</Link></ListItem>\r\n        <ListItem><Link to={url+\"/todolist\"}>TodoList</Link></ListItem>\r\n        <ListItem><Link to={url+\"/flowchart\"}>FlowChart</Link></ListItem>\r\n      </List>\r\n      </div>\r\n      <Switch>\r\n          <Route exact path={url}><UserHome myclass={myclass}/></Route>\r\n          <Route path={url+\"/calander\"}><Calander myclass={myclass}/></Route>\r\n          <Route path={url+\"/todolist\"}><TodoList myclass={myclass} subclass={subclass}/></Route>\r\n          <Route path={url+\"/flowchart\"}><FlowChart username={username} myclass={myclass}/></Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nfunction Login(){\r\n  const [clicked, setClick] = useState(false)\r\n  const [username, setName] = useState(\"\")\r\n  const [password, setpwd] = useState(\"\") \r\n  const {loginSuccess, login} = UserLogin(username) \r\n  const setLogout = () => { login(false); setClick(false) }\r\n  return (\r\n    <Router>\r\n      {loginSuccess?(\r\n        <div className=\"user_page\">\r\n          <Redirect to={\"/\"+username}/>\r\n          <Route path=\"/:username\"><Userpage setLogout={setLogout}/></Route>   \r\n        </div>\r\n      ):(\r\n        <div className=\"login_page\">\r\n          <Redirect to=\"/login\"/>\r\n          <h2>Login</h2>\r\n          <p>Username: </p>\r\n          <input class=\"select\"\r\n                value={username}\r\n                onChange={(e) => setName(e.target.value)}></input>\r\n          <p>Password: </p>\r\n          <input class=\"select\"\r\n                value={password}\r\n                onChange={(e) => setpwd(e.target.value)}></input>\r\n          <div class=\"button\"><button  className=\"newbutton\"\r\n            onClick={() => {\r\n                setClick(true)\r\n                const userinfo = { username: username, password: password }\r\n                login(userinfo)\r\n                setpwd(\"\")\r\n              }}\r\n            disabled={!password}>Login</button></div>\r\n        </div>)}\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Login;","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\home.js",["122","123","124","125"],"import '../App.css';\r\nimport { GetUsers } from '../axios'\r\nimport React, { useState } from 'react'\r\nimport { Button} from '@material-ui/core';\r\n\r\n\r\nfunction Home(){\r\n    const [clicked, setClick] = useState(false)\r\n    const data = GetUsers()\r\n    \r\n    return (\r\n      <div className=\"Home_page\">\r\n        <h1 className=\"fronttitle\"><p className=\"change\">Welcome to HierarchiOrg!</p></h1>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Home;\r\n","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\axios.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159"],"import { useQuery, useMutation, useSubscription } from '@apollo/client';\r\nimport  {JOB_QUERY, USERS_QUERY, TODOS_QUERY, ONE_USER_QUERY, SUBUSER_QUERY, ENDDATE_QUERY, CALENDAR_QUERY, CLASSES_QUERY} from './graphql/queries'\r\nimport {CREATE_JOB_MUTATION, CREATE_USER_MUTATION, SET_ENDDATE_MUTATION, ADD_CALENDAR_MUTATION, ADD_TODO_MUTATION,ADD_CLASS_MUTATION } from './graphql/mutations'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst GetUsers = () => { \r\n    const {loading, error, data} = useQuery(USERS_QUERY)\r\n    return data\r\n}\r\n\r\nconst GetJobs = () => { \r\n    const {loading, error, data, refetch} = useQuery(JOB_QUERY)\r\n    const [toget, setToGet] = useState(true)\r\n    useEffect(() => {   \r\n        console.log(\"getjob\")\r\n        if(toget){\r\n            refetch()\r\n            if(!data){\r\n                refetch()\r\n                setToGet(false)\r\n            }\r\n        }\r\n    }, [toget,data])\r\n    return {job:data,setToGet}\r\n}\r\n\r\nconst GetClasses = () => { \r\n    const {loading, error, data, refetch} = useQuery(CLASSES_QUERY)\r\n    const [toget, setToGet] = useState(false)\r\n    useEffect(() => {   \r\n        if(toget){\r\n            refetch()\r\n            if(!data){\r\n                refetch()\r\n            }\r\n            setToGet(false)   \r\n        }\r\n    }, [toget,data])\r\n    return {data,setToGet}\r\n}\r\n\r\nconst GetEnddate = () => { \r\n    const {loading, error, data, refetch} = useQuery(ENDDATE_QUERY)\r\n    // console.log(\"get enddate\")\r\n    const [toget, setToGet] = useState(false)\r\n    useEffect(() => {   \r\n        if(toget){\r\n            refetch()\r\n            if(!data){\r\n                refetch()\r\n                setToGet(false)\r\n            }\r\n        }\r\n    }, [toget,data])\r\n    return {data,setToGet}\r\n}\r\n\r\nconst GetSubClass = (username) => { \r\n    const {loading, error, data} = useQuery(SUBUSER_QUERY,  {variables: {username: username}})\r\n    return data\r\n}\r\n\r\nconst NewUser = () => {\r\n    const [addUser, {data}] = useMutation(CREATE_USER_MUTATION)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n    useEffect(()=>{\r\n        if (data){ setIsSuccess(data.addUser.success) }\r\n    }, [data])\r\n    const createUser = (userinfo) => {\r\n        const {username, password, userclass} = userinfo\r\n        addUser({ variables: {\r\n                username: username,\r\n                password: password,\r\n                userclass: userclass\r\n        }})\r\n\r\n    }\r\n    return {createUser, isSuccess}\r\n}\r\n\r\nconst NewJob = () => {\r\n    const [addJob] = useMutation(CREATE_JOB_MUTATION)\r\n    const createJob = (jobinfo) => {\r\n        const {joblist, mutation} = jobinfo\r\n        console.log(\"axios\",jobinfo)\r\n        addJob({ variables: {\r\n            joblist: joblist,\r\n            mutation: mutation,\r\n        }})\r\n\r\n    }\r\n    return {createJob}\r\n}\r\n\r\nconst SetEnddate = () => {\r\n    const [setEnddate, {data}] = useMutation(SET_ENDDATE_MUTATION)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n    useEffect(()=>{\r\n        if (data){ \r\n            console.log(data)\r\n            setIsSuccess(data.setEnddate.success) \r\n        }\r\n    }, [data])\r\n    const newEnddate = async (date) => {\r\n        if(date){\r\n            console.log(date)\r\n            const x = await setEnddate({ variables: {\r\n                enddate: date,\r\n            }})\r\n        }\r\n    }\r\n    return {newEnddate, isSuccess}\r\n}\r\n\r\nconst UserLogin = () => {\r\n    // for login, loginSuccess (true, false), login: function\r\n    const [userName, setUserName] = useState(\"\")\r\n    const [passWord, setPassWord] = useState(\"\")\r\n    const [loginSuccess, setLoginSuccess] = useState(false);\r\n    const {loading, error, data} = useQuery(ONE_USER_QUERY,  {variables: {username: userName}})\r\n    const login = (userinfo) => {\r\n        if (userinfo === false){\r\n            setLoginSuccess(false);\r\n            setUserName(\"\");\r\n            setPassWord(\"\");\r\n        }else{\r\n            const {username, password} = userinfo\r\n            setUserName(username);\r\n            setPassWord(password);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data){\r\n            if (data.getOneUser.success === true && data.getOneUser.user.password === passWord){\r\n                setLoginSuccess(true)\r\n            }else{\r\n                setLoginSuccess(false)\r\n            }\r\n    }}, [data,login])\r\n    return {loginSuccess, login}\r\n}\r\n\r\nconst MutateTodo = () => {\r\n    const [addTodo] = useMutation(ADD_TODO_MUTATION)\r\n    const saveTodo = (addtodoinput) => {\r\n        const {username, userclass, todolist, mutation, todoitem} = addtodoinput\r\n        console.log(\"axios/saveTodo, todoitem\", addtodoinput)\r\n        addTodo({\r\n            variables: {\r\n                username: username,\r\n                userclass: userclass,\r\n                todolist: todolist,\r\n                mutation: mutation,\r\n                todoitem: todoitem,\r\n            }\r\n        })\r\n    }\r\n    \r\n    return {saveTodo}\r\n}\r\n\r\nconst MutateClass = () => {\r\n    const [addClass] = useMutation(ADD_CLASS_MUTATION)\r\n    const saveClass = (addclassinput) => {\r\n        const {classlist, mutation} = addclassinput\r\n        console.log(\"axios/saveclass, classlist\", addclassinput)\r\n        addClass({\r\n            variables: {\r\n                classlist: classlist,\r\n                mutation: mutation,\r\n            }\r\n        })\r\n    }\r\n    return {saveClass}\r\n}\r\n\r\nconst GetTodo = () => { \r\n    const [username, setUsername] = useState(\"\")\r\n    const [toget, setToGet] = useState(false)\r\n    const {loading, error, data, refetch} = useQuery(TODOS_QUERY,{variables: { username }})\r\n    useEffect(() => {   \r\n        if(toget){\r\n            refetch()\r\n            // console.log(\"don't refetch\")\r\n            setToGet(false)\r\n        }\r\n    }, [toget])\r\n   \r\n    return {data, setToGet, setUsername}\r\n}\r\n\r\nconst GetCalendar = () => {\r\n    \r\n    const [username, setUserName] = useState(\"\")\r\n    const [year, setYear] = useState(-1)\r\n    const [month, setMonth] = useState(-1)\r\n    // const [todolist, setTodoList] = useState([])\r\n    \r\n    const {loading, error, data, refetch} = useQuery(CALENDAR_QUERY, {variables: {username: username, year: year, month: month}})\r\n    const [setData] = useMutation(ADD_CALENDAR_MUTATION)\r\n    \r\n    const setRefetch = ({username, year, month}) => {\r\n        console.log(\"setrefetch:\", username, year, month)\r\n        setYear(year)\r\n        setMonth(month)\r\n        setUserName(username)\r\n    }\r\n    useEffect(async () => {\r\n        console.log(\"refetch calander!\")\r\n        await refetch({variables: {username: username, year: year, month: month}, fetchPolicy: 'no-cache'})\r\n    }, [username, month, year])\r\n    const addToCalendar = async ({username, year, month, todolist}) => {\r\n        console.log(\"mutation calendar\", username, year, month, todolist)\r\n        await setData({variables: {username: username, year: year, month: month, todoList: todolist}})\r\n        console.log(\"refetch calendar!\")\r\n        await refetch({variables: {username: username, year: year, month: month}, fetchPolicy: 'no-cache'})\r\n\r\n    }\r\n    \r\n    useEffect(() => {\r\n        console.log(\"axios/getcalendar, data:\", data)\r\n    }, [JSON.stringify(data)])\r\n    return {data, setRefetch, addToCalendar}\r\n}\r\nconst GetTodoCal = () => { \r\n\r\n    const [username, setUserNameTodo] = useState(\"\")\r\n    const [month, setMonthTodo] = useState(0)\r\n    const [year, setYearTodo] = useState(0)\r\n    const [monthLong, setMonthLongTodo] = useState(0)\r\n\r\n    const [todolist, setTodoList] = useState([])\r\n    const {loading, error, data, refetch} = useQuery(TODOS_QUERY,{variables: { username: username}}) // b.c. the user is fixed, only need to query once\r\n \r\n    const updateTodoCal = ({username, month, year, monthLong}) => {\r\n        setUserNameTodo(username);\r\n        setMonthTodo(month);\r\n        setYearTodo(year);\r\n        setMonthLongTodo(monthLong);\r\n    }\r\n    useEffect(() => {\r\n        updateCallback(username, month, year, monthLong);\r\n    }, [data, month, year])\r\n\r\n    const updateCallback = (username, month, year, monthLong) => {\r\n        let tmp = Array(monthLong).fill([]);\r\n        if (data){\r\n            for (var i = 0; i < data.getTodos.length; i++){\r\n                if (data.getTodos[i].username == username){\r\n                    for (var j = 0; j < data.getTodos[i].todolist.length; j++){\r\n                        const deadline = data.getTodos[i].todolist[j].deadline;\r\n                        const value = data.getTodos[i].todolist[j].value;\r\n                        const [_year, _month, _date] = deadline.split('-');\r\n                        if (_month == month && _year == year){\r\n                            tmp[parseInt(_date) - 1] = [...tmp[parseInt(_date) - 1], value];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setTodoList(tmp);\r\n    }\r\n    return {todolist, updateTodoCal}\r\n}\r\n\r\n\r\n\r\nexport { GetJobs, NewJob, GetUsers, NewUser, UserLogin, MutateTodo, GetTodo, GetSubClass, SetEnddate, GetEnddate, GetCalendar, GetClasses, MutateClass, GetTodoCal};\r\n","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\userhome.js",["160","161","162","163"],"import '../App.css';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useRouteMatch} from \"react-router-dom\";\r\nimport Userhome_director from \"./general_director_home\"\r\nimport Userhome_manager from \"./manager_home\"\r\nimport Userhome_member from \"./member_home\"\r\nimport { GetEnddate } from '../axios'\r\n\r\nfunction Userhome({myclass}){\r\n    var { url } = useRouteMatch()\r\n    const username = url.split(\"/\")[-1]\r\n    var {data,setToGet} = GetEnddate()\r\n    const [enddate, setEnddate] = useState(\"\")\r\n    const mycll = myclass.split(\" \")\r\n    useEffect(()=>{\r\n      if(data){\r\n        if(data.getEnddate){\r\n          if(data.getEnddate.enddate!==null){ setEnddate(data.getEnddate.enddate) }\r\n    }}},[data])\r\n    if(mycll[mycll.length-1]===\"director\"){\r\n      return <Userhome_director enddate={enddate} setToGetdate={setToGet} setEnddate={setEnddate}/>           \r\n    }else if(mycll[mycll.length-1]===\"manager\"){\r\n      return <Userhome_manager enddate={enddate} />        \r\n    }else if(mycll[mycll.length-1]===\"member\"){\r\n      return <Userhome_member enddate={enddate} />       \r\n    }else{\r\n      return <></>\r\n    }\r\n    \r\n}\r\n\r\nexport default Userhome;","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\todolist.js",["164","165"],"import './todo_style.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport SubTodoList from \"./todo_components/subtodolist\";\r\nimport { useRouteMatch} from \"react-router-dom\";\r\nimport {FormControl, MenuItem, InputLabel,Select, Chip, Input } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction TodoList({myclass,subclass}){\r\n    const clss = myclass.split(\" \")\r\n    var { url } = useRouteMatch()\r\n    const username = url.split(\"/\")[1]\r\n    const [select, setSelect] = useState([])\r\n    const [selectclass, setSelectclass] = useState([])\r\n    const [open, setOpen] = useState(false)\r\n    \r\n    \r\n\r\n    const handleChange = (e) =>{\r\n        if(e.target.value.length!==0){\r\n            setSelect(e.target.value)\r\n            var classlist = []\r\n            for (let i = 0; i < e.target.value.length; i += 1) {\r\n                console.log(e.target.value[i])\r\n                var findselectclass = subclass.filter(user => user.username===e.target.value[i])\r\n                if(e.target.value[i]){\r\n                    classlist.push(findselectclass[0].userclass)\r\n                }\r\n            }\r\n            if(classlist.length!==0){\r\n                setSelectclass(classlist)\r\n            }\r\n        }else{\r\n            setSelect([])\r\n            setSelectclass([])\r\n        }\r\n        \r\n    }\r\n    const useStyles = makeStyles((theme) => ({\r\n        formControl: {\r\n          margin: theme.spacing(1),\r\n          minWidth: 300,\r\n          textAlign: \"left\",\r\n          \r\n        },\r\n        chips: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n    }))\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <div class=\"my_todo\">\r\n                <SubTodoList username={username} me={username} userclass={myclass} neww={open}/>\r\n            </div>\r\n            {clss[clss.length-1]!==\"member\"?<div class=\"sub_todo\">\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel id=\"subuser\" style={{color:\"white\"}}>Select member to see their Todos</InputLabel>\r\n                    <Select id=\"subuser\" value={select} onChange={handleChange} label=\"Select member\" multiple\r\n                            variant=\"outlined\"\r\n                            input={<Input />} \r\n                            renderValue={(selected) => (\r\n                                <div className={classes.chips}>{selected.map(value => <Chip key={value} label={value} className={classes.chip} />)}</div>\r\n                            )}>\r\n                        {subclass.map(data => <MenuItem value={data.username}>{data.username}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                {select.length!==0?(select.map((name,index) => <SubTodoList username={name} userclass={selectclass[index]} me={username}/> )):<></>}\r\n                {/* {subclass.map(data => {\r\n                    return <SubTodoList username={data.username} userclass={data.userclass} me={username}/>})} */}\r\n            </div>:<></>}\r\n            \r\n        </>\r\n    );\r\n}\r\nexport default TodoList;","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\flowchart.js",["166","167","168","169","170","171","172","173","174","175"],"import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport Sheet from \"./sheet\"\r\nimport { GetClasses } from '../axios'\r\nimport { Button } from '@material-ui/core';\r\nimport { GetJobs, NewJob } from '../axios'\r\n\r\nfunction FlowChart({myclass, username}){\r\n    const [groups,setgroups] = useState([])   \r\n    const [uniqueclass,setClass] = useState([])\r\n    const [selectrow, setRow] = useState(0)\r\n    const [mission, setMission] = useState(0)   // 1 for add above, 2 for add below\r\n    const {data} = GetClasses()\r\n    const {createJob} = NewJob()\r\n    const {job,setToGet} = GetJobs()\r\n    const [grid,setGrid] = useState([[]])\r\n    useEffect(()=>{\r\n      if(job){if(job.getJob){\r\n          const newgrid = job.getJob.joblist\r\n          if(newgrid){\r\n            console.log(\"load new\")\r\n            var newgrid2 = newgrid.slice()\r\n            for(var g of newgrid2){\r\n              if(g.length==6){\r\n                if(g[2].value==username){\r\n                  g = g.map(gg=>{\r\n                    if(!gg.className.includes(\"time\")){\r\n                      gg.className=gg.className+\" mmee\"\r\n                      return gg\r\n                }})}\r\n                else{\r\n                  g = g.map(gg=>{\r\n                    if(gg.className.includes(\"mmee\")){ gg.className=gg.className.replaceAll(\"mmee\",\"\") }\r\n                    return gg\r\n                })}\r\n              }else if(g.length==4){\r\n                if(g[0].value==username){\r\n                  g = g.map(gg=>{ gg.className=gg.className+\" mmee\"\r\n                  return gg\r\n                })}\r\n                else{\r\n                  g = g.map(gg=>{\r\n                    if(gg.className.includes(\"mmee\")){gg.className=gg.className.replaceAll(\"mmee\",\"\")}\r\n                    return gg\r\n                })}\r\n              }\r\n            }\r\n            setGrid(newgrid2)\r\n    }}}},[job])\r\n    useEffect(()=>{\r\n      if(data){ if(data.getClasses){\r\n          const newgroup = data.getClasses.classlist\r\n          if(newgroup){\r\n            setgroups(newgroup)\r\n            const newclass = []\r\n            for (const g of newgroup){ \r\n                if(!newclass.includes(g.label.split(\" \")[0])){\r\n                    if(g.label.split(\" \")[0]==\"general\"){ newclass.push(\"director\") }\r\n                    else{ newclass.push(g.label.split(\" \")[0]) }\r\n                }\r\n            }\r\n            setClass(newclass)\r\n          }\r\n  }}},[data])\r\n    const save = async () => {\r\n      var newItems = grid.slice();\r\n      newItems.forEach((e) => {e.forEach((ee)=>{delete ee.__typename})})\r\n      const addjobinput = {joblist:newItems, mutation: \"MODIFIED\"}\r\n      let msg = await createJob(addjobinput)\r\n      setToGet(true)\r\n    }\r\n    return <div style={{padding:\"6%\"}} className={myclass.includes(\"member\")?\"disable\":\"\"}>\r\n      {!myclass.includes(\"member\")?<h2 className=\"title\" style={{marginBottom:\"40px\"}}>Double click to edit the flowchart...</h2>:<></>}\r\n      {uniqueclass.length==0?<></>:<Sheet grid={grid} setGrid={setGrid} groups={uniqueclass} selectrow={selectrow} setRow={setRow} mission={mission} setMission={setMission}/>}\r\n      {!myclass.includes(\"member\")?(<><Button variant=\"contained\" color=\"primary\" style={{margin:\"10px\",marginTop:\"30px\"}} onClick={()=>setMission(1)}>add member row</Button>\r\n      <Button variant=\"contained\" color=\"primary\" style={{margin:\"10px\",marginTop:\"30px\"}} onClick={save}>save sheet</Button></>):(<></>)}\r\n       {/* {uniqueclass.map(g=>{return<Button variant=\"contained\" color=\"primary\" style={{margin:\"10px\"}} >{g}</Button>})} */}\r\n      </div>\r\n}\r\nexport default FlowChart;","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\calander.js",["176","177","178","179","180","181","182","183","184"],"import './calander_style.css';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport Select from \"react-select\";\r\nimport { useState, useEffect } from 'react';\r\nimport { GetCalendar, GetTodoCal } from '../axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport x from './img/x.png'\r\n\r\n\r\nfunction Calander(){\r\n    var { url } = useRouteMatch()\r\n    const username = url.split(\"/\")[1]\r\n    const weekdayname = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\r\n    const yearoptions = [{value: 2019, label: 2019},\r\n                        {value: 2020, label: 2020},\r\n                        {value: 2021, label: 2021},\r\n                        {value: 2022, label: 2022},\r\n                        {value: 2023, label: 2023}];\r\n    const monthoptions = [{value: 1, label: \"January\"},\r\n                          {value: 2, label: \"February\"},\r\n                          {value: 3, label: \"March\"},\r\n                          {value: 4, label: \"April\"},\r\n                          {value: 5, label: \"May\"},\r\n                          {value: 6, label: \"June\"},\r\n                          {value: 7, label: \"July\"},\r\n                          {value: 8, label: \"August\"},\r\n                          {value: 9, label: \"September\"},\r\n                          {value: 10, label: \"October\"},\r\n                          {value: 11, label: \"November\"},\r\n                          {value: 12, label: \"December\"}];\r\n    const [month, setMonth] = useState(1);\r\n    const [year, setYear] = useState(2021);\r\n    const [startDay, setStartDay] = useState(0); // which day in a week does the month start, 0 stands for Sunday\r\n    const [monthLong, setMonthLong] = useState(31); // how long is the month\r\n    const [chosenDate, setChosenDate] = useState([-1, -1]); // chosen month, date\r\n    const [chosenDateList, setChosenDateList] = useState([]); // a boolean list for indetifying if the date box is chosen\r\n    const [inputTodo, setInputTodo] = useState(\"\");\r\n    const [showTodo, setShowTodo] = useState(false);\r\n    const {data, setRefetch, addToCalendar} = GetCalendar(); // data: a list that contains #dayInAMonth sublists\r\n    const {todolist, updateTodoCal} = GetTodoCal();\r\n    \r\n    useEffect(async () => {\r\n        setStartDay(new Date(year, month - 1, 1).getDay());\r\n        setMonthLong(new Date(year, month, 0).getDate());\r\n        setRefetch({username: username, year: year, month: month}); // avoid GetTodoCal hasn't finished loading\r\n        updateTodoCal({username: username, month: month, year: year, monthLong: monthLong});\r\n    }, [month, year])\r\n\r\n    useEffect(() => {\r\n        setChosenDateList(() => {\r\n            let tmp = Array(monthLong).fill(false);\r\n            if (chosenDate[1] > 0)\r\n            {\r\n                tmp[chosenDate[1] - 1] = true;\r\n            }\r\n            return tmp;\r\n        })\r\n    }, [chosenDate])\r\n\r\n    let calendar = [];\r\n    var date = 1;\r\n    const deleteCalTodo = (e) => {\r\n        const id = e.target.id;\r\n        const date = id.split('_')[0];\r\n        const order = id.split('_')[1];\r\n        let tmp = data.getCalendar;\r\n        tmp[date - 1].splice(order, 1);\r\n        addToCalendar({username: username, year: year, month: month, todolist: tmp})\r\n    }\r\n    for (var row = 0; row < Math.round((monthLong + startDay) / 7) + 1; row++){\r\n        let week = [];\r\n        for (var col = 0; col < 7; col++){\r\n            if (row === 0){\r\n                if (col < startDay){ week.push(<td class='date notclickable'></td>)}\r\n                else{\r\n                    let todos = [];\r\n                    if (data && data.getCalendar.length > 0){ // data: avoid initializing undefined, data.getCalendar.length: avoid empty array (default return when no data exist)\r\n                        for (var i = 0; i < data.getCalendar[date - 1].length; i++){\r\n                            todos.push(<div class='cal-todo-row'><div class='cal-todo-task'>{data.getCalendar[date - 1][i]}</div>\r\n                                        <img class='cal-x' src={x} id={`${date}_${i}`} onClick={(e) => {deleteCalTodo(e)}}/></div>)\r\n                        }\r\n                    }\r\n                    if (todolist.length > 0 && showTodo){\r\n                        for (var i = 0; i < todolist[date - 1].length; i++){\r\n                            todos.push(<div class='cal-todolist'>{todolist[date - 1][i]}</div>)\r\n                        }\r\n                    }\r\n                    week.push(<td class={chosenDateList[date - 1]?'date clicked':'date'} id={`${month}_${date}`}\r\n                    onClick={(e) => setChosenDate([e.target.id.split('_')[0], e.target.id.split('_')[1]])}>\r\n                    {date}{todos}</td>);\r\n                    date++;\r\n                }\r\n            }else{\r\n                if (date <= monthLong){\r\n                    let todos = [];\r\n                    if (data && data.getCalendar.length > 0){\r\n                        for (var i = 0; i < data.getCalendar[date - 1].length; i++){\r\n                            todos.push(<div class='cal-todo-row'><div class='cal-todo-task'>{data.getCalendar[date - 1][i]}</div>\r\n                                        <img class='cal-x' src={x} id={`${date}_${i}`} onClick={(e) => {deleteCalTodo(e)}}/></div>)\r\n                        }\r\n                    }\r\n                    if (todolist.length > 0 && showTodo){\r\n                        for (var i = 0; i < todolist[date - 1].length; i++){ todos.push(<div class='cal-todolist'>{todolist[date - 1][i]}</div>)}\r\n                    }\r\n                    week.push(<td class={chosenDateList[date - 1]?'date clicked':'date'} id={`${month}_${date}`}\r\n                                  onClick={(e) => setChosenDate([e.target.id.split('_')[0], e.target.id.split('_')[1]])}>\r\n                                  {date}{todos}</td>);\r\n                    date++;\r\n                } else{  week.push(<td class='date notclickable'></td>)}\r\n            }\r\n        }\r\n        calendar.push(<tr class=\"Cal-content-row\">{week}</tr>)\r\n    }\r\n\r\n    return(<div class=\"Theme-black\">\r\n                <h1>{username}'s Calendar</h1>\r\n                <div>\r\n                    <input type=\"text\" placeholder=\"Type something...\" id=\"cal-input\" onChange={(e) => {setInputTodo(e.target.value)}}></input>\r\n                    <button id=\"cal-button\" \r\n                            onClick={() => { if (inputTodo !== \"\" && chosenDate[1] !== -1){\r\n                                                let tmp = data.getCalendar;\r\n                                                console.log(\"original todolist:\", tmp, \"index:\", chosenDate[1] - 1);\r\n                                                if (tmp.length === 0){\r\n                                                    tmp = Array(monthLong).fill([]);\r\n                                                }\r\n                                                tmp[chosenDate[1] - 1] = [...tmp[chosenDate[1] - 1], inputTodo];\r\n                                                // setTodoList(tmp);\r\n                                                setChosenDate([-1, -1]);\r\n                                                addToCalendar({username: username, year: year, month: month, todolist: tmp})\r\n                                    }}}>Add to Calendar</button>\r\n                    <Select id=\"cal-year\" options={yearoptions} placeholder={2021} \r\n                            onChange={(e)=>{setYear(e.value)\r\n                                            setChosenDate([-1, -1])}}/>\r\n                    <Select id=\"cal-month\" options={monthoptions} placeholder={\"January\"}\r\n                            onChange={(e)=>{setMonth(e.value)\r\n                                            setChosenDate([-1, -1])}}/>\r\n                    <button id=\"cal-import\" onClick={() => {setShowTodo(!showTodo)}}\r\n                            >{showTodo ? 'Hide Todo':'Import Todo'}</button>\r\n                </div>\r\n                <div>\r\n                    <table id='Cal-main'>\r\n                        <tr class=\"Cal-title-row\">{weekdayname.map(day=>{return <td style={{overflowX:\"hidden\"}}>{day}</td>})}</tr>\r\n                        {calendar}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Calander;","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\member_home.js",["185"],"import '../App.css';\r\nimport React, { useState,useEffect } from 'react'\r\nimport { useRouteMatch} from \"react-router-dom\";\r\nimport Countdown from './countdown';\r\nimport { Paper} from '@material-ui/core';\r\nimport { GetTodo } from '../axios'\r\n\r\nfunction Userhome_member({enddate}){\r\n    var { url } = useRouteMatch()\r\n    const username = url.split(\"/\")[1]\r\n    const [showcountdown, setShow] = useState(false)\r\n    const {data, setUsername} = GetTodo()\r\n    const [remainTodo, setRemain] = useState(0)\r\n    const [start, setStart] = useState(1)\r\n    useEffect(()=>{\r\n      if(enddate){setShow(true)}\r\n    },[enddate])\r\n    function getTodoFromBack(){  \r\n      if(data){\r\n          const getTodos = data.getTodos\r\n          for (const userTodo of getTodos) {\r\n              if(userTodo.username===username){\r\n                  const itemlist = userTodo.todolist\r\n                  if(itemlist.length>0){ setRemain(itemlist.length) }                       \r\n              }\r\n          }\r\n          setStart(0)\r\n  }}\r\n\r\n  useEffect(()=>{ \r\n      if(start){ \r\n          setUsername(username)\r\n          getTodoFromBack() \r\n      }\r\n  }, [start, data])\r\n    return (\r\n      <div className=\"Home_page\">\r\n        <div className=\"column1\">\r\n            {showcountdown?<Paper className=\"Countdown\">\r\n              <h3 className=\"title\">Seminar is coming soon:</h3>\r\n              <h3 className=\"title\">{enddate?enddate.split(\"T\")[0]:\"\"}</h3>\r\n              <Countdown enddate={enddate} />\r\n            </Paper>:<></>\r\n            }\r\n        </div>\r\n        <div className=\"column2\">\r\n          <h1 className=\"title\" style={{float:\"left\", padding:\"10px 10px 20px 40px\"}}>You have...</h1>\r\n          <h2 className=\"title\" style={{clear:\"left\"}}>{remainTodo} todos remain to be done.</h2>\r\n        </div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Userhome_member;","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\sheet.js",["186","187","188","189","190","191","192","193","194","195","196","197"],"import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport ReactDataSheet from 'react-datasheet';\r\nimport 'react-datasheet/lib/react-datasheet.css';\r\n\r\n\r\nfunction Sheet({grid,setGrid,groups,selectrow,setRow,mission,setMission}){\r\n    const [start,setStart]=useState(true)\r\n    const timeslot = [\"8:00 ~ 10:00\",\"10:00 ~ 12:00\",\"12:00 ~ 13:00\",\"13:00 ~ 15:00\",\"15:00 ~ 17:00\"]\r\n    var width = Math.floor(1000/4)\r\n    useEffect(()=>{\r\n        if(mission==1){\r\n            var timerow = selectrow\r\n            var flag = 1\r\n            while(flag){\r\n                if(grid[timerow].length!==grid[0].length){ timerow -= 1 }\r\n                else{ flag = 0 }\r\n            }\r\n            const noon = grid[timerow][0].value==\"12:00 ~ 13:00\"\r\n            const newr1 = []\r\n            for(var i=0; i<timerow;i++){ newr1.push(grid[i]) }\r\n            const newr2 = []\r\n            for(var i=0;i<2;i++){\r\n                var newcell = grid[timerow][i]\r\n                newcell.rowSpan += 1\r\n                newr2.push(newcell)\r\n            }\r\n            for(var i=2;i<grid[timerow].length;i++){ newr2.push(grid[timerow][i]) }\r\n            const newr3 = []\r\n            for(var i=timerow+1; i<selectrow+1;i++){ newr3.push(grid[i]) }\r\n            const newr4 = createaddrow(noon)\r\n            const newr5 = []\r\n            for(var i=selectrow+1; i<grid.length;i++){ newr5.push(grid[i]) }\r\n            setGrid(newr1.concat([newr2],newr3,newr4,newr5))\r\n            setMission(0)\r\n        }\r\n    },[mission])\r\n\r\n    const createColumn = (value,width=width,readOnly=false,className=\"\",colSpan=1,rowSpan=1) => ({\r\n        value: value,\r\n        readOnly: readOnly,\r\n        width: width,\r\n        colSpan: colSpan,\r\n        className: className,\r\n        rowSpan: rowSpan\r\n    })\r\n    const createfirstRow = () => {\r\n        const col3 = [createColumn(\"time slot\",width,true,\"time\"),createColumn(\"schedule\",width,true,\"time\")]\r\n        const col4 = [createColumn(\"member\",width,true),createColumn(\"job\",width,true),createColumn(\"place\",width,true),createColumn(\"note\",width,true)]\r\n        const row2 = col3.concat(col4)\r\n        return [row2]\r\n    }\r\n    const createaddrow = (noon) =>{\r\n        const col2 = []\r\n        for (var i=0;i<4;i++){\r\n            if(noon){ col2.push(createColumn(\" \",width,false,\"noon\")) } \r\n            else{ col2.push(createColumn(\" \",width)) }\r\n        }\r\n        return [col2]\r\n    }\r\n    const createRow = (time)=>{\r\n        const col1 = time==\"12:00 ~ 13:00\"?[createColumn(time,width,false,\"time noon\"),createColumn(\" \",width,false,\"time noon\")]:[createColumn(time,width,false,\"time\"),createColumn(\" \",width,false,\"time\")]\r\n        const col2 = []\r\n        for (var i=0;i<4;i++){\r\n            if(time==\"12:00 ~ 13:00\"){ col2.push(createColumn(\" \",width,false,\"noon\")) }\r\n            else{  col2.push(createColumn(\" \",width)) }\r\n        }\r\n        return col1.concat(col2)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        if(start){\r\n            if(grid.length==0){\r\n                const row1 = createfirstRow(groups)\r\n                const row2 = []\r\n                for(var i=0;i<timeslot.length;i++){\r\n                    const r = createRow(timeslot[i],groups.length)\r\n                    row2.push(r)\r\n                }\r\n                const newsheet = row1.concat(row2)\r\n                setGrid(newsheet)\r\n            }\r\n            setStart(false)\r\n        }\r\n    },[start,groups])\r\n    return (\r\n        <ReactDataSheet\r\n          data={grid}\r\n          valueRenderer={cell => cell.value}\r\n          onCellsChanged={changes => {\r\n            const grid2 = grid.map(row => [...row]);\r\n            changes.forEach(({ cell, row, col, value }) => {\r\n                grid2[row][col] = { ...grid[row][col], value };\r\n            });\r\n            setGrid(grid2);\r\n          }}\r\n          onSelect={({ start })=>{ if(start){ setRow(start.i) } }}\r\n        />\r\n      );\r\n}\r\nexport default Sheet;","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\todo_components\\subtodolist.js",["198","199"],"import '../todo_style.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Section from \"./Section\";\r\n\r\nfunction SubTodoList({username,userclass,me,neww}){\r\n    const [state, setState] = useState(0)\r\n    const [total, setTotal] = useState(0)\r\n    useEffect(()=>{\r\n        console.log(userclass)\r\n    })\r\n    return (\r\n        \r\n        <div className=\"todo-app__root\" >\r\n            <Header userclass={userclass} text={`${username}'s TODOs`} />\r\n            <Section username={username}\r\n                userclass={userclass}\r\n                setTotal={setTotal} \r\n                statenow={state}\r\n                me={me}\r\n                neww={neww}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default SubTodoList;","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\countdown.js",["200"],"import '../App.css';\r\nimport React, { useState,useEffect } from 'react'\r\nimport { useRouteMatch} from \"react-router-dom\";\r\n\r\nfunction Countdown({enddate}){\r\n    var { url } = useRouteMatch()\r\n    const username = url.split(\"/\")[-1]\r\n    const [timeleft,setTimeleft] = useState({\r\n        days: 0,\r\n        hours: 0,\r\n        min: 0,\r\n        sec: 0,\r\n    })\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            var date = calculateCountdown(enddate)  ///////////\r\n            date? setTimeleft(date) : stop(interval)\r\n        }, 1000);\r\n        return ()=>stop(interval)       ////// necessary => component unmount \r\n    }, [enddate])\r\n    const stop = (interval) =>{\r\n        clearInterval(interval);\r\n    }\r\n    const calculateCountdown = (endDate) => {\r\n        let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n        if (diff <= 0) return false\r\n        const newtimeLeft = {\r\n            years: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n        }\r\n        if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n            newtimeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n            diff -= newtimeLeft.years * 365.25 * 86400;\r\n        }\r\n        if (diff >= 86400) { // 24 * 60 * 60\r\n            newtimeLeft.days = Math.floor(diff / 86400);\r\n            diff -= newtimeLeft.days * 86400;\r\n        }\r\n        if (diff >= 3600) { // 60 * 60\r\n            newtimeLeft.hours = Math.floor(diff / 3600);\r\n            diff -= newtimeLeft.hours * 3600;\r\n        }\r\n        if (diff >= 60) {\r\n            newtimeLeft.min = Math.floor(diff / 60);\r\n            diff -= newtimeLeft.min * 60;\r\n        }\r\n        newtimeLeft.sec = diff;\r\n        return newtimeLeft;\r\n    }  \r\n    const addLeadingZeros = (value) => {\r\n        value = String(value);\r\n        while (value.length < 2) { value = '0' + value; }\r\n        return value;\r\n      }\r\n    return (\r\n      <div >\r\n        <span className=\"Countdown-col\">\r\n          <span className=\"Countdown-col-element\">\r\n              <strong>{addLeadingZeros(timeleft.days)}</strong>\r\n              <span>{timeleft.days === 1 ? 'Day' : 'Days'}</span>\r\n          </span>\r\n        </span>\r\n\r\n        <span className=\"Countdown-col\">\r\n          <span className=\"Countdown-col-element\">\r\n            <strong>{addLeadingZeros(timeleft.hours)}</strong>\r\n            <span>Hours</span>\r\n          </span>\r\n        </span>\r\n\r\n\r\n        <span className=\"Countdown-col\">\r\n          <span className=\"Countdown-col-element\">\r\n            <strong>{addLeadingZeros(timeleft.min)}</strong>\r\n            <span>Min</span>\r\n          </span>\r\n        </span>\r\n\r\n        <span className=\"Countdown-col\">\r\n          <span className=\"Countdown-col-element\">\r\n            <strong>{addLeadingZeros(timeleft.sec)}</strong>\r\n            <span>Sec</span>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Countdown;","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\todo_components\\Section.js",["201","202","203","204","205"],"import React, { useEffect, useState } from \"react\";\r\nimport List from \"./List\"\r\nimport Input from \"./Input\"\r\nimport {MutateTodo, GetTodo } from '../../axios'\r\n\r\nfunction Section({username, userclass, setTotal,statenow,me,neww}){\r\n    const [start, setStart] = useState(1)\r\n    const [order, setOrder] = useState(0)\r\n    const [items, setItems] = useState([])\r\n    const [clearid, setClearId] = useState(null)\r\n    const {data, setToGet, setUsername} = GetTodo()\r\n    const {saveTodo} = MutateTodo()\r\n\r\n    useEffect(()=>{\r\n        if(neww){\r\n            setToGet(true)}\r\n    },[neww, username])\r\n   const setValueAndSave = async (deadline,todo) => {\r\n        console.log(todo,deadline)\r\n        var newItems = items.slice();\r\n        const newItem = {fromName: me, deadline: deadline, value: todo, isComplete: false, order: order};\r\n        \r\n        newItems.forEach((e) => {delete e.__typename})\r\n        newItems = newItems.concat(newItem);\r\n\r\n        setItems(newItems)\r\n        setOrder(order+1)\r\n        console.log(userclass)\r\n        const addtodoinput = { username: username, todolist: newItems, userclass: userclass, mutation: \"CREATED\", todoitem: newItem}\r\n        console.log(\"Section, addtodoinput:\", addtodoinput)\r\n        let msg = await saveTodo(addtodoinput)\r\n        setToGet(true)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(clearid!=null){\r\n            var newItems = items.slice();\r\n            var index;\r\n            for(var i=0;i<clearid+1;i++){\r\n                if(newItems[i].order===clearid){ index=i; break; }\r\n            }\r\n            const delItem = newItems[index];\r\n            delete delItem.__typename;\r\n            newItems.splice(index,1);\r\n            setTotal(newItems.filter(e => !e.isComplete).length);\r\n            setItems(newItems)\r\n            setClearId(null)\r\n            newItems = newItems.map(ii=>{\r\n                delete ii.__typename;\r\n                return ii\r\n            })\r\n            const addtodoinput = { username: username, todolist: newItems, userclass: userclass, mutation: \"DELETED\", todoitem: delItem}\r\n            let msg = saveTodo(addtodoinput)\r\n            setToGet(true)\r\n        }\r\n    },[clearid])\r\n\r\n    function getTodoFromBack(){  \r\n        if(data){\r\n            const getTodos = data.getTodos\r\n            for (const userTodo of getTodos) {\r\n                if(userTodo.username===username){\r\n                    const itemlist = userTodo.todolist\r\n                    if(itemlist.length>0){\r\n                        const lastid = itemlist[itemlist.length-1].order\r\n                        setOrder(lastid+1)\r\n                        setItems(itemlist)\r\n                    }                       \r\n                }\r\n            }\r\n            setStart(0)\r\n    }}\r\n\r\n    useEffect(()=>{ \r\n        if(start){ \r\n            setUsername(username)\r\n            getTodoFromBack() \r\n        }\r\n        \r\n    }, [start, data])\r\n\r\n    // useEffect(() => {\r\n    //     // subscription update\r\n    //     console.log(\"getTodoFromBack\")\r\n    //     getTodoFromBack()\r\n    // }, [JSON.stringify(data)])\r\n\r\n    return (\r\n        <section className=\"todo-app__main\" id=\"main\">\r\n            <Input setValueAndSave={setValueAndSave}/>\r\n            <List items={items} \r\n                statenow={statenow}\r\n                setClearId={setClearId} \r\n                my={me===username}/>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Section;\r\n","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\todo_components\\Header.js",["206"],"import React from \"react\";\r\nexport default ({ text,userclass }) => {\r\n    const clss = userclass.split(\" \")\r\n    return (\r\n        <header className=\"todo-app__header\">\r\n            <h1 className={\"todo-app__title \"+clss[clss.length-1]}>{text}</h1>\r\n        </header>\r\n    );\r\n};\r\n","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\todo_components\\Input.js",[],"D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\todo_components\\List.js",["207","208"],"import React from \"react\";\r\nimport {Table, TableContainer, TableCell, TableHead, TableRow, TableBody, Paper, Checkbox, IconButton, Tooltip } from '@material-ui/core'\r\nimport x from \"../img/delete.png\"\r\n\r\nfunction List({items,statenow,setClearId,my}){\r\n    const checkState = (items,state) => {\r\n        if(state===0){\r\n            return items.map((t,index)=>{t.id=index\r\n                return t});\r\n        }else if(state===1){\r\n            return items.filter(item => !item.isComplete).map((t,index)=>{t.id=index \r\n                return t});\r\n        }else{\r\n            return items.filter(item => item.isComplete).map((t,index)=>{t.id=index \r\n                return t});\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        {field: \"fromName\", headerName: \"Manager\", width: \"14%\" },\r\n        {field: \"deadline\", headerName: \"Deadline\", width: \"25%\" },\r\n        {field: \"value\", headerName: \"Todo details\", width: \"60%\" },\r\n    ]\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={my?\"todo-app__list my\":\"todo-app__list\"}>\r\n            <TableHead>\r\n                <TableRow>\r\n                    {my?<TableCell style={{ width: \"11%\",overflowX:\"hidden\" }} >Done</TableCell>:<></>}\r\n                    {columns.map(c=>{return <TableCell style={{ width: c.width,overflowX:\"hidden\" }}>{c.headerName}</TableCell>})}\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {checkState(items,statenow).map(item => { \r\n                    return <TableRow>\r\n                        {my?<Tooltip title=\"Delete\" onClick={() => setClearId(item.order)}><IconButton aria-label=\"delete\"><img className={\"todo-app__item-x\"} src={x} /></IconButton></Tooltip>:<></>}\r\n                        {columns.map(c=>{\r\n                        const field = c.field\r\n                        return <TableCell style={{ width: c.width, textAlign: \"center\" }}>{item[field]}</TableCell>})}</TableRow>})}\r\n            </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n\r\n}\r\n\r\nexport default List;\r\n","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\general_director_home.js",["209","210","211","212","213"],"import '../App.css';\r\nimport React, { useState,useEffect } from 'react'\r\nimport { useRouteMatch} from \"react-router-dom\";\r\nimport Countdown from './countdown';\r\nimport DatePicker from 'react-date-picker';\r\nimport { Paper, Card, CardContent, Button } from '@material-ui/core';\r\nimport CreateSelect from \"./createselect\";\r\nimport { SetEnddate, GetClasses, MutateClass } from '../axios'\r\n\r\n\r\nfunction Userhome_director({setToGetdate,enddate,setEnddate}){\r\n    var { url } = useRouteMatch()\r\n    const username = url.split(\"/\")[-1]\r\n    const [showcountdown, setShow] = useState(false)\r\n    const [enddate2, onChange] = useState(\"\");         \r\n    const [groupOptions,setoptions] = useState([])   \r\n    const {newEnddate, isSuccess} = SetEnddate()\r\n    const {data,setToGet} = GetClasses()\r\n    const {saveClass} = MutateClass()\r\n    useEffect(()=>{\r\n      if(data){if(data.getClasses){\r\n          const classoption = data.getClasses.classlist\r\n          if(classoption){setoptions(classoption)\r\n      }}else{\r\n        setToGet(true)\r\n      }\r\n    }},[data])\r\n    useEffect(()=>{\r\n      if(enddate){setShow(true)}\r\n    },[enddate])\r\n    useEffect(()=>{\r\n      if(enddate2){\r\n        setEnddate(String(enddate2))\r\n        newEnddate(String(enddate2))\r\n        setToGetdate(true)\r\n    }},[enddate2])\r\n    const ssave = async () => {\r\n      var newItems = groupOptions.slice();\r\n      newItems.forEach((e) => {delete e.__typename})\r\n      const addclassinput = {classlist:newItems, mutation: \"MODIFIED\"}\r\n      let msg = await saveClass(addclassinput)\r\n      setToGet(true)\r\n    }\r\n    const ddelete = async (value)=>{\r\n      const newgroupOptions = groupOptions.filter(op => op.label!==value)\r\n      setoptions(newgroupOptions)\r\n    }\r\n    return (\r\n      <div className=\"Home_page\">\r\n        <div className=\"column1\">\r\n            {showcountdown?<Paper className=\"Countdown\">\r\n              <h3 className=\"title\">Seminar is coming soon:</h3>\r\n              <h3 className=\"title\">{enddate?enddate.slice(0,16):\"\"}</h3>\r\n              <Countdown enddate={enddate} />\r\n            </Paper>:<></>\r\n            }\r\n            <div className=\"pick\">\r\n              <h3>Pick the date of your seminar:</h3>\r\n              <DatePicker\r\n                className=\"pic\"\r\n                onChange={onChange}\r\n                value={enddate2}\r\n                format=\"MM-dd-y\"\r\n                dayPlaceholder=\"DD\"\r\n                monthPlaceholder=\"MM\"\r\n                yearPlaceholder=\"YYYY\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"column2\">\r\n            <div className=\"addgroup\">\r\n              <h3>Manage your organization</h3>\r\n              <CreateSelect options={groupOptions} setoptions={setoptions} />\r\n            </div>\r\n            <div className=\"twocolumns\">\r\n              {groupOptions.length!==0 ? groupOptions.map(group =>\r\n              <div className=\"card\" id={group.value} onClick={()=>ddelete(group.value)}><Card ><CardContent className=\"cardd\">{group.value}</CardContent>\r\n              </Card></div>):<></>}\r\n            </div>\r\n            <div class=\"button\"><Button variant=\"contained\"\r\n                onClick={ssave}\r\n                disabled={!groupOptions}>Save</Button></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Userhome_director;","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\manager_home.js",["214"],"import '../App.css';\r\nimport React, { useState,useEffect } from 'react'\r\nimport { useRouteMatch} from \"react-router-dom\";\r\nimport Countdown from './countdown';\r\nimport { Paper} from '@material-ui/core';\r\nimport { GetTodo } from '../axios'\r\n\r\nfunction Userhome_manager({enddate}){\r\n    var { url } = useRouteMatch()\r\n    const username = url.split(\"/\")[1]\r\n    const [showcountdown, setShow] = useState(false)\r\n    const {data, setUsername} = GetTodo()\r\n    const [remainTodo, setRemain] = useState(0)\r\n    const [start, setStart] = useState(1)\r\n    useEffect(()=>{\r\n      if(enddate){setShow(true)}\r\n    },[enddate])\r\n    function getTodoFromBack(){  \r\n      if(data){\r\n          const getTodos = data.getTodos\r\n          for (const userTodo of getTodos) {\r\n              if(userTodo.username===username){\r\n                  const itemlist = userTodo.todolist\r\n                  if(itemlist.length>0){ setRemain(itemlist.length) }                       \r\n              }\r\n          }\r\n          setStart(0)\r\n  }}\r\n\r\n  useEffect(()=>{ \r\n      if(start){ \r\n          setUsername(username)\r\n          getTodoFromBack() \r\n      }\r\n  }, [start, data])\r\n    return (\r\n      <div className=\"Home_page\">\r\n        <div className=\"column1\">\r\n            {showcountdown?<Paper className=\"Countdown\">\r\n              <h3 className=\"title\">Seminar is coming soon:</h3>\r\n              <h3 className=\"title\">{enddate?enddate.split(\"T\")[0]:\"\"}</h3>\r\n              <Countdown enddate={enddate} />\r\n            </Paper>:<></>\r\n            }\r\n        </div>\r\n        <div className=\"column2\">\r\n          <h1 className=\"title\" style={{float:\"left\", padding:\"10px 10px 20px 40px\"}}>You have...</h1>\r\n          <h2 className=\"title\" style={{clear:\"left\"}}>{remainTodo} todos remain to be done.</h2>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Userhome_manager;","D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\graphql\\mutations.js",[],"D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\graphql\\queries.js",[],"D:\\我的資料-20201222\\電機三上\\網服\\web-project-nosub\\web-project\\frontend\\src\\pages\\createselect.js",["215"],"import React, { useState,useEffect } from 'react'\r\nimport CreatableSelect from \"react-select/creatable\"\r\nconst createOption = (label) => ({\r\n    label: label,\r\n    value: label,\r\n})\r\nconst defaultOptions = [\r\n    createOption(\"general director\"),\r\n    createOption(\"section manager\"),\r\n    createOption(\"group member\"),\r\n]\r\nfunction CreateSelect({options,setoptions}){\r\n    const [start, setStart] = useState(true)\r\n    const [value, setValue] = useState(\"\")\r\n    const [isLoading,setisloading] = useState(false)\r\n    const handleChange = (newValue, actionMeta) => {\r\n        console.group('Value Changed');\r\n        console.log(newValue);\r\n        console.log(`action: ${actionMeta.action}`);\r\n        console.groupEnd();\r\n        setValue(newValue)\r\n    }\r\n    const handleCreate = (inputValue) => {\r\n        setisloading(true)\r\n        console.group('Option created');\r\n        console.log('Wait a moment...');\r\n        setTimeout(() => {\r\n          const newOption = createOption(inputValue);\r\n          console.log(newOption);\r\n          console.groupEnd();\r\n          setisloading(false)\r\n          setoptions([...options, newOption])\r\n          setValue(newOption)\r\n        }, 1000);\r\n    }\r\n    useEffect(()=>{\r\n        if(start){\r\n            setoptions(defaultOptions)\r\n            setStart(false)\r\n        }\r\n    },[start])\r\n    return (\r\n        <CreatableSelect isClearable className=\"option\"\r\n            isDisabled={isLoading}  isLoading={isLoading}\r\n            onChange={handleChange} onCreateOption={handleCreate}\r\n            options={options}       value={value}\r\n            placeholder=\"Add group category...\"/>\r\n    )\r\n  }\r\n\r\nexport default CreateSelect;",{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":5,"column":10,"nodeType":"222","messageId":"223","endLine":5,"endColumn":16},{"ruleId":"224","severity":1,"message":"225","line":25,"column":5,"nodeType":"226","endLine":25,"endColumn":11,"suggestions":"227"},{"ruleId":"220","severity":1,"message":"228","line":53,"column":10,"nodeType":"222","messageId":"223","endLine":53,"endColumn":17},{"ruleId":"220","severity":1,"message":"221","line":4,"column":10,"nodeType":"222","messageId":"223","endLine":4,"endColumn":16},{"ruleId":"220","severity":1,"message":"228","line":8,"column":12,"nodeType":"222","messageId":"223","endLine":8,"endColumn":19},{"ruleId":"220","severity":1,"message":"229","line":8,"column":21,"nodeType":"222","messageId":"223","endLine":8,"endColumn":29},{"ruleId":"220","severity":1,"message":"230","line":9,"column":11,"nodeType":"222","messageId":"223","endLine":9,"endColumn":15},{"ruleId":"220","severity":1,"message":"231","line":1,"column":33,"nodeType":"222","messageId":"223","endLine":1,"endColumn":48},{"ruleId":"220","severity":1,"message":"232","line":7,"column":12,"nodeType":"222","messageId":"223","endLine":7,"endColumn":19},{"ruleId":"220","severity":1,"message":"233","line":7,"column":21,"nodeType":"222","messageId":"223","endLine":7,"endColumn":26},{"ruleId":"220","severity":1,"message":"232","line":12,"column":12,"nodeType":"222","messageId":"223","endLine":12,"endColumn":19},{"ruleId":"220","severity":1,"message":"233","line":12,"column":21,"nodeType":"222","messageId":"223","endLine":12,"endColumn":26},{"ruleId":"224","severity":1,"message":"234","line":23,"column":8,"nodeType":"226","endLine":23,"endColumn":20,"suggestions":"235"},{"ruleId":"220","severity":1,"message":"232","line":28,"column":12,"nodeType":"222","messageId":"223","endLine":28,"endColumn":19},{"ruleId":"220","severity":1,"message":"233","line":28,"column":21,"nodeType":"222","messageId":"223","endLine":28,"endColumn":26},{"ruleId":"224","severity":1,"message":"234","line":38,"column":8,"nodeType":"226","endLine":38,"endColumn":20,"suggestions":"236"},{"ruleId":"220","severity":1,"message":"232","line":43,"column":12,"nodeType":"222","messageId":"223","endLine":43,"endColumn":19},{"ruleId":"220","severity":1,"message":"233","line":43,"column":21,"nodeType":"222","messageId":"223","endLine":43,"endColumn":26},{"ruleId":"224","severity":1,"message":"234","line":54,"column":8,"nodeType":"226","endLine":54,"endColumn":20,"suggestions":"237"},{"ruleId":"220","severity":1,"message":"232","line":59,"column":12,"nodeType":"222","messageId":"223","endLine":59,"endColumn":19},{"ruleId":"220","severity":1,"message":"233","line":59,"column":21,"nodeType":"222","messageId":"223","endLine":59,"endColumn":26},{"ruleId":"220","severity":1,"message":"238","line":107,"column":19,"nodeType":"222","messageId":"223","endLine":107,"endColumn":20},{"ruleId":"220","severity":1,"message":"232","line":120,"column":12,"nodeType":"222","messageId":"223","endLine":120,"endColumn":19},{"ruleId":"220","severity":1,"message":"233","line":120,"column":21,"nodeType":"222","messageId":"223","endLine":120,"endColumn":26},{"ruleId":"224","severity":1,"message":"239","line":140,"column":9,"nodeType":"226","endLine":140,"endColumn":21,"suggestions":"240"},{"ruleId":"220","severity":1,"message":"232","line":181,"column":12,"nodeType":"222","messageId":"223","endLine":181,"endColumn":19},{"ruleId":"220","severity":1,"message":"233","line":181,"column":21,"nodeType":"222","messageId":"223","endLine":181,"endColumn":26},{"ruleId":"224","severity":1,"message":"234","line":188,"column":8,"nodeType":"226","endLine":188,"endColumn":15,"suggestions":"241"},{"ruleId":"220","severity":1,"message":"232","line":200,"column":12,"nodeType":"222","messageId":"223","endLine":200,"endColumn":19},{"ruleId":"220","severity":1,"message":"233","line":200,"column":21,"nodeType":"222","messageId":"223","endLine":200,"endColumn":26},{"ruleId":"224","severity":1,"message":"242","line":209,"column":15,"nodeType":"243","endLine":212,"endColumn":6},{"ruleId":"224","severity":1,"message":"234","line":212,"column":8,"nodeType":"226","endLine":212,"endColumn":31,"suggestions":"244"},{"ruleId":"224","severity":1,"message":"245","line":223,"column":8,"nodeType":"226","endLine":223,"endColumn":30,"suggestions":"246"},{"ruleId":"224","severity":1,"message":"247","line":223,"column":9,"nodeType":"248","endLine":223,"endColumn":29},{"ruleId":"220","severity":1,"message":"232","line":234,"column":12,"nodeType":"222","messageId":"223","endLine":234,"endColumn":19},{"ruleId":"220","severity":1,"message":"233","line":234,"column":21,"nodeType":"222","messageId":"223","endLine":234,"endColumn":26},{"ruleId":"220","severity":1,"message":"249","line":234,"column":34,"nodeType":"222","messageId":"223","endLine":234,"endColumn":41},{"ruleId":"224","severity":1,"message":"250","line":244,"column":8,"nodeType":"226","endLine":244,"endColumn":27,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":250,"column":47,"nodeType":"254","messageId":"255","endLine":250,"endColumn":49},{"ruleId":"252","severity":1,"message":"253","line":255,"column":36,"nodeType":"254","messageId":"255","endLine":255,"endColumn":38},{"ruleId":"252","severity":1,"message":"253","line":255,"column":54,"nodeType":"254","messageId":"255","endLine":255,"endColumn":56},{"ruleId":"220","severity":1,"message":"256","line":11,"column":11,"nodeType":"222","messageId":"223","endLine":11,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":21,"column":14,"nodeType":"259","endLine":21,"endColumn":100},{"ruleId":"257","severity":1,"message":"260","line":23,"column":14,"nodeType":"259","endLine":23,"endColumn":52},{"ruleId":"257","severity":1,"message":"261","line":25,"column":14,"nodeType":"259","endLine":25,"endColumn":51},{"ruleId":"220","severity":1,"message":"262","line":2,"column":27,"nodeType":"222","messageId":"223","endLine":2,"endColumn":36},{"ruleId":"220","severity":1,"message":"263","line":14,"column":18,"nodeType":"222","messageId":"223","endLine":14,"endColumn":25},{"ruleId":"220","severity":1,"message":"264","line":9,"column":12,"nodeType":"222","messageId":"223","endLine":9,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":24,"column":26,"nodeType":"254","messageId":"255","endLine":24,"endColumn":28},{"ruleId":"252","severity":1,"message":"253","line":25,"column":30,"nodeType":"254","messageId":"255","endLine":25,"endColumn":32},{"ruleId":"265","severity":1,"message":"266","line":26,"column":31,"nodeType":"243","messageId":"267","endLine":26,"endColumn":33},{"ruleId":"252","severity":1,"message":"253","line":36,"column":32,"nodeType":"254","messageId":"255","endLine":36,"endColumn":34},{"ruleId":"252","severity":1,"message":"253","line":37,"column":30,"nodeType":"254","messageId":"255","endLine":37,"endColumn":32},{"ruleId":"224","severity":1,"message":"225","line":49,"column":10,"nodeType":"226","endLine":49,"endColumn":15,"suggestions":"268"},{"ruleId":"252","severity":1,"message":"253","line":58,"column":45,"nodeType":"254","messageId":"255","endLine":58,"endColumn":47},{"ruleId":"220","severity":1,"message":"269","line":69,"column":11,"nodeType":"222","messageId":"223","endLine":69,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":74,"column":26,"nodeType":"254","messageId":"255","endLine":74,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":14},{"ruleId":"224","severity":1,"message":"242","line":43,"column":15,"nodeType":"243","endLine":48,"endColumn":6},{"ruleId":"224","severity":1,"message":"270","line":48,"column":8,"nodeType":"226","endLine":48,"endColumn":21,"suggestions":"271"},{"ruleId":"224","severity":1,"message":"272","line":59,"column":8,"nodeType":"226","endLine":59,"endColumn":20,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":81,"column":41,"nodeType":"259","endLine":81,"endColumn":125},{"ruleId":"276","severity":1,"message":"277","line":85,"column":34,"nodeType":"222","messageId":"278","endLine":85,"endColumn":35},{"ruleId":"276","severity":1,"message":"277","line":98,"column":34,"nodeType":"222","messageId":"278","endLine":98,"endColumn":35},{"ruleId":"274","severity":1,"message":"275","line":100,"column":41,"nodeType":"259","endLine":100,"endColumn":125},{"ruleId":"276","severity":1,"message":"277","line":104,"column":34,"nodeType":"222","messageId":"278","endLine":104,"endColumn":35},{"ruleId":"224","severity":1,"message":"279","line":35,"column":6,"nodeType":"226","endLine":35,"endColumn":19,"suggestions":"280"},{"ruleId":"252","severity":1,"message":"253","line":12,"column":19,"nodeType":"254","messageId":"255","endLine":12,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":19,"column":48,"nodeType":"254","messageId":"255","endLine":19,"endColumn":50},{"ruleId":"276","severity":1,"message":"277","line":23,"column":21,"nodeType":"222","messageId":"278","endLine":23,"endColumn":22},{"ruleId":"276","severity":1,"message":"277","line":28,"column":21,"nodeType":"222","messageId":"278","endLine":28,"endColumn":22},{"ruleId":"276","severity":1,"message":"277","line":30,"column":21,"nodeType":"222","messageId":"278","endLine":30,"endColumn":22},{"ruleId":"276","severity":1,"message":"277","line":33,"column":21,"nodeType":"222","messageId":"278","endLine":33,"endColumn":22},{"ruleId":"224","severity":1,"message":"281","line":37,"column":7,"nodeType":"226","endLine":37,"endColumn":16,"suggestions":"282"},{"ruleId":"283","severity":1,"message":"284","line":39,"column":39,"nodeType":"222","messageId":"285","endLine":39,"endColumn":44},{"ruleId":"252","severity":1,"message":"253","line":62,"column":26,"nodeType":"254","messageId":"255","endLine":62,"endColumn":28},{"ruleId":"252","severity":1,"message":"253","line":65,"column":20,"nodeType":"254","messageId":"255","endLine":65,"endColumn":22},{"ruleId":"252","severity":1,"message":"253","line":73,"column":27,"nodeType":"254","messageId":"255","endLine":73,"endColumn":29},{"ruleId":"224","severity":1,"message":"286","line":85,"column":7,"nodeType":"226","endLine":85,"endColumn":21,"suggestions":"287"},{"ruleId":"220","severity":1,"message":"288","line":7,"column":19,"nodeType":"222","messageId":"223","endLine":7,"endColumn":27},{"ruleId":"220","severity":1,"message":"289","line":8,"column":12,"nodeType":"222","messageId":"223","endLine":8,"endColumn":17},{"ruleId":"220","severity":1,"message":"256","line":7,"column":11,"nodeType":"222","messageId":"223","endLine":7,"endColumn":19},{"ruleId":"224","severity":1,"message":"290","line":17,"column":7,"nodeType":"226","endLine":17,"endColumn":23,"suggestions":"291"},{"ruleId":"220","severity":1,"message":"269","line":31,"column":13,"nodeType":"222","messageId":"223","endLine":31,"endColumn":16},{"ruleId":"220","severity":1,"message":"269","line":53,"column":17,"nodeType":"222","messageId":"223","endLine":53,"endColumn":20},{"ruleId":"224","severity":1,"message":"292","line":56,"column":7,"nodeType":"226","endLine":56,"endColumn":16,"suggestions":"293"},{"ruleId":"224","severity":1,"message":"279","line":80,"column":8,"nodeType":"226","endLine":80,"endColumn":21,"suggestions":"294"},{"ruleId":"295","severity":1,"message":"296","line":2,"column":1,"nodeType":"297","endLine":9,"endColumn":3},{"ruleId":"220","severity":1,"message":"298","line":2,"column":82,"nodeType":"222","messageId":"223","endLine":2,"endColumn":90},{"ruleId":"274","severity":1,"message":"275","line":36,"column":124,"nodeType":"259","endLine":36,"endColumn":170},{"ruleId":"220","severity":1,"message":"256","line":13,"column":11,"nodeType":"222","messageId":"223","endLine":13,"endColumn":19},{"ruleId":"220","severity":1,"message":"299","line":17,"column":24,"nodeType":"222","messageId":"223","endLine":17,"endColumn":33},{"ruleId":"224","severity":1,"message":"290","line":27,"column":8,"nodeType":"226","endLine":27,"endColumn":14,"suggestions":"300"},{"ruleId":"224","severity":1,"message":"301","line":36,"column":8,"nodeType":"226","endLine":36,"endColumn":18,"suggestions":"302"},{"ruleId":"220","severity":1,"message":"269","line":41,"column":11,"nodeType":"222","messageId":"223","endLine":41,"endColumn":14},{"ruleId":"224","severity":1,"message":"279","line":35,"column":6,"nodeType":"226","endLine":35,"endColumn":19,"suggestions":"303"},{"ruleId":"224","severity":1,"message":"304","line":41,"column":7,"nodeType":"226","endLine":41,"endColumn":14,"suggestions":"305"},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.","ArrayExpression",["308"],"'clicked' is assigned a value but never used.","'setClick' is assigned a value but never used.","'data' is assigned a value but never used.","'useSubscription' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["309"],["310"],["311"],"'x' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'passWord'. Either include it or remove the dependency array.",["312"],["313"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["314"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["315"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'refetch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'monthLong', 'updateCallback', and 'username'. Either include them or remove the dependency array.",["316"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'username' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Userhome_director must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Userhome_manager must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Userhome_member must be in PascalCase or SCREAMING_SNAKE_CASE","'useEffect' is defined but never used.","'setOpen' is assigned a value but never used.","'groups' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["317"],"'msg' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'monthLong', 'setRefetch', 'updateTodoCal', and 'username'. Either include them or remove the dependency array.",["318"],"React Hook useEffect has a missing dependency: 'monthLong'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setChosenDateList' needs the current value of 'monthLong'.",["319"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'getTodoFromBack', 'setUsername', and 'username'. Either include them or remove the dependency array.",["320"],"React Hook useEffect has missing dependencies: 'createaddrow', 'grid', 'selectrow', 'setGrid', and 'setMission'. Either include them or remove the dependency array. If 'setGrid' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["321"],"no-use-before-define","'width' was used before it was defined.","usedBeforeDefined","React Hook useEffect has missing dependencies: 'createRow', 'createfirstRow', 'grid.length', 'setGrid', and 'timeslot'. Either include them or remove the dependency array. If 'setGrid' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["322"],"'setState' is assigned a value but never used.","'total' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setToGet'. Either include it or remove the dependency array.",["323"],"React Hook useEffect has missing dependencies: 'items', 'saveTodo', 'setToGet', 'setTotal', 'userclass', and 'username'. Either include them or remove the dependency array. If 'setTotal' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["324"],["325"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Checkbox' is defined but never used.","'isSuccess' is assigned a value but never used.",["326"],"React Hook useEffect has missing dependencies: 'newEnddate', 'setEnddate', and 'setToGetdate'. Either include them or remove the dependency array. If 'setEnddate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["327"],["328"],"React Hook useEffect has a missing dependency: 'setoptions'. Either include it or remove the dependency array. If 'setoptions' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["329"],"no-global-assign","no-unsafe-negation",{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"332","fix":"334"},{"desc":"332","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"352","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"352","fix":"367"},{"desc":"368","fix":"369"},"Update the dependencies array to be: [data, username]",{"range":"370","text":"371"},"Update the dependencies array to be: [toget, data, refetch]",{"range":"372","text":"373"},{"range":"374","text":"373"},{"range":"375","text":"373"},"Update the dependencies array to be: [data, login, passWord]",{"range":"376","text":"377"},"Update the dependencies array to be: [refetch, toget]",{"range":"378","text":"379"},"Update the dependencies array to be: [username, month, year, refetch]",{"range":"380","text":"381"},"Update the dependencies array to be: [data]",{"range":"382","text":"383"},"Update the dependencies array to be: [data, month, monthLong, updateCallback, username, year]",{"range":"384","text":"385"},"Update the dependencies array to be: [job, username]",{"range":"386","text":"387"},"Update the dependencies array to be: [month, monthLong, setRefetch, updateTodoCal, username, year]",{"range":"388","text":"389"},"Update the dependencies array to be: [chosenDate, monthLong]",{"range":"390","text":"391"},"Update the dependencies array to be: [start, data, setUsername, username, getTodoFromBack]",{"range":"392","text":"393"},"Update the dependencies array to be: [createaddrow, grid, mission, selectrow, setGrid, setMission]",{"range":"394","text":"395"},"Update the dependencies array to be: [start, groups, grid.length, createfirstRow, timeslot, setGrid, createRow]",{"range":"396","text":"397"},"Update the dependencies array to be: [neww, setToGet, username]",{"range":"398","text":"399"},"Update the dependencies array to be: [clearid, items, saveTodo, setToGet, setTotal, userclass, username]",{"range":"400","text":"401"},{"range":"402","text":"393"},"Update the dependencies array to be: [data, setToGet]",{"range":"403","text":"404"},"Update the dependencies array to be: [enddate2, newEnddate, setEnddate, setToGetdate]",{"range":"405","text":"406"},{"range":"407","text":"393"},"Update the dependencies array to be: [setoptions, start]",{"range":"408","text":"409"},[986,992],"[data, username]",[895,907],"[toget, data, refetch]",[1277,1289],[1691,1703],[4280,4292],"[data, login, passWord]",[5713,5720],"[refetch, toget]",[6587,6610],"[username, month, year, refetch]",[7117,7139],"[data]",[7928,7947],"[data, month, monthLong, updateCallback, username, year]",[1872,1877],"[job, username]",[2598,2611],"[month, monthLong, setRefetch, updateTodoCal, username, year]",[2885,2897],"[chosenDate, monthLong]",[1131,1144],"[start, data, setUsername, username, getTodoFromBack]",[1508,1517],"[createaddrow, grid, mission, selectrow, setGrid, setMission]",[3410,3424],"[start, groups, grid.length, createfirstRow, timeslot, setGrid, createRow]",[577,593],"[neww, setToGet, username]",[2160,2169],"[clearid, items, saveTodo, setToGet, setTotal, userclass, username]",[2886,2899],[1047,1053],"[data, setToGet]",[1282,1292],"[enddate2, newEnddate, setEnddate, setToGetdate]",[1132,1145],[1326,1333],"[setoptions, start]"]